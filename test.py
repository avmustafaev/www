# test.py
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ VMware –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –≤ –≥–æ—Å—Ç–µ–≤–æ–π –û–° –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω—ã.

–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ VMware-–∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–µ
- –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
"""

from modules.vmware_connector import VMwareConnector
import sys


def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞.

    –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç:
    1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ VMware
    2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —Ü–µ–ª–µ–≤–æ–π –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    3. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤ –≥–æ—Å—Ç–µ–≤–æ–π –û–°
    4. –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
    5. –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç VMware

    Raises:
        Exception: –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç –æ—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
    """
    connector = VMwareConnector()
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ VMware
        print("üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ VMware...")
        connector.connect()
        
        # –ó–∞–ø—Ä–æ—Å –∏–º–µ–Ω–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω—ã
        vm_name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω—ã: ").strip()
        if not vm_name:
            print("‚ùå –ò–º—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω—ã –Ω–µ —É–∫–∞–∑–∞–Ω–æ!")
            return
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è VM (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞)
        if not connector.vm_exists(vm_name):
            print(f"‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞ '{vm_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            return
            
        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤ –≥–æ—Å—Ç–µ–≤–æ–π –û–°
        command = input("\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä 'uptime df -h'): ").strip()
        if not command:
            command = "uptime && df -h"  # –ö–æ–º–∞–Ω–¥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            
        print(f"\n‚ñ∂Ô∏è –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞: {command}")
        
        stdout = connector.execute_guest_command(vm_name, command)
        print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(stdout)
            
    except ConnectionError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    except PermissionError as e:
        print(f"üîí –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞: {e}")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ
        print("üîå –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç VMware...")
        connector.disconnect()

if __name__ == "__main__":
    main()